from aiogram import types
from aiogram.dispatcher import FSMContext

from keyboards.default import main, polls
from loader import dp
import states

from utils.db_api.database import Poll, UserPoll


@dp.message_handler(text="üì∞ –ú–æ–∏ –æ–ø—Ä–æ—Å—ã")
async def command_my_polls(message: types.Message):
    await message.answer("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ üì∞ –ú–æ–∏ –æ–ø—Ä–æ—Å—ã", reply_markup=polls.pollsMenu)


@dp.message_handler(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def command_go_main(message: types.Message):
    await message.answer("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ ‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main.mainMenu)


@dp.message_handler(text="‚ÑπÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—Ä–æ—Å–æ–≤")
async def command_poll_stats(message: types.Message):
    polls = await Poll.filter(Poll.user_id == int(message.from_user.id))

    for poll in polls:
        await message.answer(poll)


@dp.message_handler(text="üìú –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã")
async def command_poll_completed(message: types.Message):
    userpolls = await UserPoll.filter(UserPoll.user_id == int(message.from_user.id))

    for userpoll in userpolls:
        poll = await Poll.get(Poll.id == userpoll.poll_id)
        await message.answer(str(poll) + str(userpoll), reply_markup=main.mainMenu)


